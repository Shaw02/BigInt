+-----------------------------------------------------------------------------
| タイトル | 多倍長整数クラス・ライブラリ for Microsoft Visual C++ (32bit)
|ファイル名| BigInt.ZIP
| カテゴリ | C++用クラス・ライブラリ
| 動作機種 | 80x86プロテクトモードに対応したCPU
|前提ソフト| Windows 2000 SP4, Windows XP, Windows Vista, Windows Server 2003
| 圧縮方式 | zip
|転載の可否| 先ずは、連絡ください。
|  備  考  | 質問等は出来ればメールでお願いします。
+-----------------------------------------------------------------------------

多倍長整数を扱う為のＣ++用クラスです。
尚、アーカイブ中には、 "Microsoft Visual C++.net 2008 Express Edition" の
プロジェクトファイルが同封されています。

マニュアルは、アーカイブ中の "/document/ index.html" をご参照ください。

	※研究中のものです。今後、色々、Version Upするかもしれません。

《特徴》
1.) オペレータ演算子をオーバーライド（定義）。
　　ソースコード中で、char型やint型のように、演算子を記述できます。

2.) ２の補数による負の数に符号に対応。
　　（従って、いかなる場合も、符号付きとして処理します。）
　　多倍長整数のバイナリをビッグエンディアンに並べ替えた場合に、
　　ASN.1(*1)の"INTEGER"をBER(*2)で符号化した時の値フィールドのバイナリと
　　同一構造になるため、セキュリティー関係のアプリケーションに組み込みやすい
　　と思います。

	(*1) ASN.1抽象構文記法1（Abstract Syntax Notation One）
	　…　（参考 ： ITU-T Rec. X.680 ＆ ISO/IEC 8824-1 ＆ JIS X 5603:1990）
	(*2) BER基本符号化規則（Basic Encoding Rule）
	　…　（参考 ： ITU-T Rec. X.690 ＆ ISO/IEC 8825-1 ＆ JIS X 5604:1990）

3.) 基本的な関数は、アセンブリ言語（MASM）にて記述。
　　ストリングス命令(movs, lods, stos等)を用いる事で、高速に計算処理します。

4.) シフト演算の高速化
　　8回よりも大きい数でシフトする場合は、ビットシフトは0〜7回だけとし、
　　その後、rep命令を伴ったmovs命令で高速メモリ転送で処理します。

5.) 算術右シフト
　　算術右シフトでは、最上位ビットを保つため（x86系のSAR命令と同等です）、
　　符号を保ちます。また、専用の関数"BigInt_Shr()"関数を使用した場合、
　　シフトで溢れたビットを、32bitだけ、戻り値に返します
　　（x86系のSAR命令における、実行後のキャリーフラグみたいなものです）。
　　1bitずつ左シフトしながら、最下位ビットをチェックするような
　　コードを記述する時に、便利です（実際、乗算・除算の処理に使用しています）。

6.) "Radix-16 Booth's multiplication（改良型ブースの乗算）による乗算演算、
　　"Restore divider（回復型除算）"による除算・剰余演算に対応。
　　これらのアルゴリズムはシフト演算と加減算で処理可能であり、
　　16bit/32bit毎の筆算よりは高速に計算します。
　　※FFT乗算には未対応です（研究中）。

								Ｓ．Ｗ．

========================================================================
●連絡先
・E-mail	sha_w@nifty.com
・URL		http://shaw.la.coocan.jp/
・mixi		http://mixi.jp/show_profile.pl?id=16558
========================================================================

製作のファイルは【BigInt.ZIP】です。
